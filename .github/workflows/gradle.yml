# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Run chmod to make gradlew executable
      run: chmod +x ./gradlew
    # Configure Gradle for optimal use in GiHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@ec92e829475ac0c2315ea8f9eced72db85bb337a # v3.0.0

    - name: Build with Gradle Wrapper
      run: ./gradlew build

    - name: .env setting
      env:
        DB_JDBC_URL: ${{ secrets.JDBCURL }}
        DB_USER: ${{ secrets.USER }}
        DB_PASSWORD: ${{ secrets.PASSWORD }}
        api-key: ${{ secrets.APIKEY }}
        bucket-name: ${{ secrets.BUCKETNAME }}
        bucket-path: ${{ secrets.BUCKETPATH }}
        DATABASE_URL: ${{ secrets.DATABASEURL }}
        spring.mail.password: ${{ secrets.MAILPASSWORD }}
        spring.mail.port: ${{ secrets.MAILPORT }}
        spring.mail.username: ${{ secrets.MAILUSERNAME }}
        project-id: ${{ secrets.PROJECTID }}
      run: |
        echo $DB_JDBC_URL
        echo $DB_USER
        echo $DB_PASSWORD
        echo $api-key
        echo $bucket-name
        echo $bucket-path
        echo $DATABASE_URL
        echo $spring.mail.password
        echo $spring.mail.port
        echo $spring.mail.username
        echo $project-id


    # NOTE: The Gradle Wrapper is the default and recommended way to run Gradle (https://docs.gradle.org/current/userguide/gradle_wrapper.html).
    # If your project does not have the Gradle Wrapper configured, you can use the following configuration to run Gradle with a specified version.

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@ec92e829475ac0c2315ea8f9eced72db85bb337a # v3.0.0
      with:
        gradle-version: '8.5'

    - name: Build with Gradle 8.5
      run: gradle build

    # Gradle build (Test 제외)
    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: clean build -x test
    # Docker build
    - name: Docker build
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker build -t ekwls20/hm-prac .
        docker tag ekwls20/hm-prac ekwls20/hm-prac:${GITHUB_SHA::7}
        docker push ekwls20/hm-prac:${GITHUB_SHA::7}
        

      # Deploy
    - name: Deploy
      uses: appleboy/ssh-action@master
      with:
        host: '35.212.246.194'
        username: ${{ secrets.SSH_USERNAME }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        envs: GITHUB_SHA
        script: |
         sudo docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
         sudo docker pull ${{ secrets.DOCKER_USERNAME }}/hm-prac:${GITHUB_SHA::7}
         sudo docker tag ${{ secrets.DOCKER_USERNAME }}/hm-prac:${GITHUB_SHA::7} spring-prac
         sudo docker-compose up -d

  dependency-submission:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
    # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@ec92e829475ac0c2315ea8f9eced72db85bb337a # v3.0.0
